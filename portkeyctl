#!/bin/bash
set -e

# Load environment variables from .env if it exists
if [ -f .env ]; then
    source .env
fi

# Configuration
CHAIN_NAME="${CHAIN_NAME:-PORTKEY_AUTH}"

if [ -z "$PORTS" ]; then
    echo "Error: PORTS environment variable is not set."
    exit 1
fi
IFS=',' read -ra PORT_ARRAY <<< "$PORTS"

# If the chain doesn't exist, we can't do anything
iptables -L $CHAIN_NAME -n >/dev/null 2>&1 || {
    echo "Chain $CHAIN_NAME chain does not exist."
    exit 0
}

# Get list of allowed IPs
ALLOWED_IPS=$(iptables -L $CHAIN_NAME -n | grep ACCEPT | awk '{print $4}' | sort | uniq)

# Function to display usage
function show_usage {
    echo "Usage: $0 [list|clear|remove IP]"
    echo ""
    echo "Commands:"
    echo "  list               List all IPs with access"
    echo "  clear              Remove all access, for every IP"
    echo "  remove <IP>        Remove access for specific IP"
    echo ""
    echo "Examples:"
    echo "  $0 list            # List all IPs with access"
    echo "  $0 clear           # Clear all access rules"
    echo "  $0 remove 192.168.1.100  # Remove access for 192.168.1.100"
    echo ""
}

# Function to list allowed IPs
function list_allowed {
    if [ -z "$ALLOWED_IPS" ]; then
        echo "Chain $CHAIN_NAME is empty, no one has access to (${PORT_ARRAY[*]})"
    else
        echo "Chain $CHAIN_NAME is providing ports (${PORT_ARRAY[*]}) to:"
        for IP in $ALLOWED_IPS; do
            echo " - $IP"
        done
    fi
}

case "$1" in
    list)
        list_allowed
        ;;
    clear)
        echo "Clearing all access rules for chain $CHAIN_NAME"
        iptables -F $CHAIN_NAME
        iptables -A $CHAIN_NAME -j DROP
        echo "Chain $CHAIN_NAME has been flushed, nobody has access to ${PORT_ARRAY[*]}"
        ;;
    remove)
        if [ -z "$2" ]; then
            echo "Error: IP address required"
            show_usage
            exit 1
        fi

        IP="$2"
        echo "Removing access for IP $IP from all protected ports"

        for PORT in "${PORT_ARRAY[@]}"; do
            if iptables -L $CHAIN_NAME -n | grep -q "ACCEPT.*$IP.*dpt:$PORT"; then
                echo "Removing rule for IP $IP on port $PORT"
                iptables -D $CHAIN_NAME -p tcp -s $IP --dport $PORT -j ACCEPT
            fi
        done

        echo "Access removed for IP $IP from ports (${PORT_ARRAY[*]})"
        ;;
    *)
        if [ -z "$1" ]; then
            list_allowed
        else
            show_usage
        fi
        ;;
esac
